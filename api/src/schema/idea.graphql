input IdeaProps {
  title: String!
  body: String
  icon: String
  type: String
}

type IdeaOps {
  createInSpace(id: ID = null, spaceId: ID!, input: IdeaProps!): Idea!
  createForConcept(id: ID = null, conceptId: ID!, input: IdeaProps!): Idea!
  createResponse(id: ID = null, contextIdeaId: ID!, input: IdeaProps!): Idea!
  connectResponse(contextIdeaId: ID!, responseIdeaId: ID!): Boolean
  disconnectResponse(contextIdeaId: ID!, responseIdeaId: ID!): Boolean
}

extend type Mutation {
  Idea: IdeaOps
}

extend type Query {
  Idea(id: ID!): Idea
}

type Idea implements Entity {
  id: ID!
  spaces: [Space!] @relation(name: "CONTAINS", direciton: "IN")
  created: String! @cypher(statement: "RETURN apoc.date.format(this.created)")
  title: String!
  icon: String
  type: String!
  concepts(first: Int = 10, offset: Int = 0): [Concept!] @relation(name: "RELATES_TO", direciton: "OUT")
  contexts(first: Int = 10, offset: Int = 0): [Idea!] @relation(name: "RESPONSE", direction: "IN")
  responses(first: Int = 10, offset: Int = 0): [Idea!] @relation(name: "RESPONSE", direction: "OUT")
  events(first: Int = 10, offset: Int = 0): [Event!] @relation(name: "CONTAINS", direction: "OUT")
  sources(first: Int = 10, offset: Int = 0): [Person!] @relation(name: "SOURCE", direction: "OUT")
  subjectPeople(first: Int = 10, offset: Int = 0): [Person!] @relation(name: "SUBJECT", direction: "OUT")
  subjectItems(first: Int = 10, offset: Int = 0): [Item!] @relation(name: "SUBJECT", direction: "OUT")
  linkedItems(first: Int = 10, offset: Int = 0): [Item!]! @relation(name: "LINKS_TO", direction: "OUT")
  # confidence(mindId: ID!): Float
}
