input EventProps {
  title: String!
  body: String
  icon: String
  datetime: String!
  type: String
}

type EventOps {
  createInSpace(id: ID = null, spaceId: ID!, input: EventProps!): Event!
  createForConcept(id: ID = null, conceptId: ID!, input: EventProps!): Event!
}

extend type Mutation {
  Event: EventOps
}

extend type Query {
  Event(id: ID!): Event
}

type Event implements Entity {
  id: ID!
  spaces: [Space!] @relation(name: "CONTAINS", direciton: "IN")
  created: String! @cypher(statement: "RETURN apoc.date.format(this.created)")
  title: String!
  icon: String
  body: String
  type: String
  datetime: String! @cypher(statement: "RETURN apoc.date.format(this.datetime)")
  # people(first: Int = 10, offset: Int = 0): [Person!]! @relation(name: "TIMELINE", direction: "IN")
  # items(first: Int = 10, offset: Int = 0): [Item!]! @relation(name: "TIMELINE", direction: "IN")
  concepts(first: Int = 10, offset: Int = 0): [Concept!]! @relation(name: "TIMELINE", direction: "IN")
}
