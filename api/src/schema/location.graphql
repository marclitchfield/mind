input LocationProps {
  id: ID
  sourceId: ID
  title: String
  icon: String
  locator: String
  remove: Boolean
}

type LocationOps {
  post_location_of_collection(input: LocationProps!): Location!
  post_described_by_concept(input: LocationProps!): Location!
  post_timeline_of_event(input: LocationProps!): Location!
  post_subject_of_idea(input: LocationProps!): Location!
  post_location_of_item(input: LocationProps!): Location!
  post_super_location(input: LocationProps!): Location!
  post_sub_location(input: LocationProps!): Location!
  post_location_of_person(input: LocationProps!): Location!
  post_in_space(input: LocationProps!): Location!
}

extend type Mutation {
  Location: LocationOps
}

extend type Query {
  Location(id: ID!): Location
}

type Location {
  id: ID!
  created: String! @cypher(statement: "RETURN apoc.date.format(this.created)")
  title: String!
  icon: String
  locator: String

  collections(first: Int = 10, offset: Int = 0): [Collection!] @relation(name: "AT", direction: "IN")
  description_concepts(first: Int = 10, offset: Int = 0): [Concept!] @relation(name: "DESCRIBED_BY", direction: "OUT")
  timeline(first: Int = 10, offset: Int = 0): [Event!] @relation(name: "AT", direction: "OUT")
  subject_ideas(first: Int = 10, offset: Int = 0): [Idea!] @relation(name: "SUBJECT", direction: "IN")
  items(first: Int = 10, offset: Int = 0): [Item!] @relation(name: "AT", direction: "OUT")
  sub_locations(first: Int = 10, offset: Int = 0): [Location!] @relation(name: "SUB", direction: "OUT")
  super_locations(first: Int = 10, offset: Int = 0): [Location!] @relation(name: "SUB", direction: "IN")
  people(first: Int = 10, offset: Int = 0): [Person!] @relation(name: "AT", direction: "IN")
  spaces(first: Int = 10, offset: Int = 0): [Space!] @relation(name: "CONTAINS", direction: "IN")
}
