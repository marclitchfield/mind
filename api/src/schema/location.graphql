input LocationProps {
  title: String!
  icon: String
  locator: String
}

type LocationOps {
  post(id: ID = null, sourceId: ID = null, input: LocationProps!): Location!
  add(id: ID!, targetId: ID!): Boolean
  remove(id: ID!, targetId: ID!): Boolean
}

extend type Mutation {
  Location: LocationOps
}

extend type Query {
  Location(id: ID!): Location
}

type Location implements Entity {
  id: ID!
  created: String! @cypher(statement: "RETURN apoc.date.format(this.created)")
  title: String!
  icon: String
  locator: String

  collections(first: Int = 10, offset: Int = 0): [Collection!] @relation(name: "AT", direction: "IN")
  concepts(first: Int = 10, offset: Int = 0): [Concept!] @relation(name: "DESCRIBED_BY", direction: "OUT")
  timeline(first: Int = 10, offset: Int = 0): [Event!] @relation(name: "AT", direction: "OUT")
  ideas(first: Int = 10, offset: Int = 0): [Idea!] @relation(name: "SUBJECT", direction: "IN")
  subLocations(first: Int = 10, offset: Int = 0): [Location!] @relation(name: "SUB", direction: "OUT")
  superLocations(first: Int = 10, offset: Int = 0): [Location!] @relation(name: "SUB", direction: "IN")
  people(first: Int = 10, offset: Int = 0): [Person!] @relation(name: "AT", direction: "IN")
  spaces: [Space!] @relation(name: "CONTAINS", direction: "IN")
}
