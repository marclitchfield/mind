input ItemProps {
  title: String!
  icon: String
  name: String
  type: String
  description: String
}

type ItemOps {
  post(id: ID = null, sourceId: ID = null, input: ItemProps!): Item!
  add(id: ID!, targetId: ID!): Boolean
  remove(id: ID!, targetId: ID!): Boolean
}

extend type Mutation {
  Item: ItemOps
}

extend type Query {
  Item(id: ID!): Item
}

type Item implements Entity {
  id: ID!
  created: String! @cypher(statement: "RETURN apoc.date.format(this.created)")
  title: String!
  icon: String
  type: String
  description: String

  collections(first: Int = 10, offset: Int = 0): [Collection!] @relation(name: "CONTAINS", direction: "IN")
  class: Concept @relation(name: "INSTANCE_OF", direction: "OUT")
  timeline(first: Int = 10, offset: Int = 0): [Event!] @relation(name: "TIMELINE", direction: "OUT")
  ideas(first: Int = 10, offset: Int = 0): [Idea!] @relation(name: "SUBJECT", direction: "IN")
  items(first: Int = 10, offset: Int = 0): [Item!] @relation(name: "CONTAINS", direction: "OUT")
  containers(first: Int = 10, offset: Int = 0): [Item!] @relation(name: "CONTAINS", direction: "IN")
  locations(first: Int = 10, offset: Int = 0): [Location!] @relation(name: "AT", direction: "OUT")
  owners(first: Int = 10, offset: Int = 0): [Person!] @relation(name: "HAS", direction: "IN")
  spaces: [Space!] @relation(name: "CONTAINS", direction: "IN")
}